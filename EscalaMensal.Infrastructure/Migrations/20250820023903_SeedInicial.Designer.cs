// <auto-generated />
using System;
using EscalaMensal.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscalaMensal.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820023903_SeedInicial")]
    partial class SeedInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EscalaMensal.Domain.Entities.CargoNivelFuncaoPermitida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<int>("FuncaoId")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("Cargo", "Nivel", "FuncaoId")
                        .IsUnique();

                    b.ToTable("CargoNivelFuncaoPermitidas");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Escala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Escalas");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<int>("NivelMinimo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcoes");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.HistoricoEscala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricosEscala");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.ItemEscala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Dia")
                        .HasColumnType("datetime2");

                    b.Property<int>("EscalaId")
                        .HasColumnType("int");

                    b.Property<int>("FuncaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EscalaId");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ItensEscala");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Restricao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Restricoes");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioVinculadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioVinculadoId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Cargo = 2,
                            Nivel = 3,
                            Nome = "João"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = false,
                            Cargo = 1,
                            Nivel = 1,
                            Nome = "Maria"
                        });
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.CargoNivelFuncaoPermitida", b =>
                {
                    b.HasOne("EscalaMensal.Domain.Entities.Funcao", "Funcao")
                        .WithMany()
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcao");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.HistoricoEscala", b =>
                {
                    b.HasOne("EscalaMensal.Domain.Entities.Funcao", "Funcao")
                        .WithMany()
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EscalaMensal.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Funcao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.ItemEscala", b =>
                {
                    b.HasOne("EscalaMensal.Domain.Entities.Escala", "Escala")
                        .WithMany("Itens")
                        .HasForeignKey("EscalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscalaMensal.Domain.Entities.Funcao", "Funcao")
                        .WithMany()
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EscalaMensal.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Escala");

                    b.Navigation("Funcao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Restricao", b =>
                {
                    b.HasOne("EscalaMensal.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Restricoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("EscalaMensal.Domain.Entities.Usuario", "UsuarioVinculado")
                        .WithMany()
                        .HasForeignKey("UsuarioVinculadoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UsuarioVinculado");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Escala", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("EscalaMensal.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Restricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
